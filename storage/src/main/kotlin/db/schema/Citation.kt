/*
 * This file is generated by jOOQ.
 */
package db.schema


import db.schema.tables.Citations
import db.schema.tables.FlywaySchemaHistory
import db.schema.tables.Replies
import db.schema.tables.Users

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Citation : SchemaImpl("citation", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>citation</code>
         */
        val CITATION: Citation = Citation()
    }

    /**
     * The table <code>citation.citations</code>.
     */
    val CITATIONS: Citations get() = Citations.CITATIONS

    /**
     * The table <code>citation.flyway_schema_history</code>.
     */
    val FLYWAY_SCHEMA_HISTORY: FlywaySchemaHistory get() = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY

    /**
     * The table <code>citation.replies</code>.
     */
    val REPLIES: Replies get() = Replies.REPLIES

    /**
     * The table <code>citation.users</code>.
     */
    val USERS: Users get() = Users.USERS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Citations.CITATIONS,
        FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
        Replies.REPLIES,
        Users.USERS
    )
}
